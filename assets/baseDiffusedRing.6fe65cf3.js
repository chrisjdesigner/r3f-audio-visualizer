import{u as h,f as M,r as P,a as b,b as g,j as o}from"./index.3df260d0.js";const c=()=>{let e=0,a=0;for(;e===0;)e=Math.random();for(;a===0;)a=Math.random();let t=Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*a);return t=t/10+.5,t>1||t<0?c():t},y=({getValueForNormalizedCoord:e})=>{const t=[...Array(1e3)].map(c),{radius:m,pointSize:f}=h({Ring:M({radius:{value:2,min:.25,max:3,step:.25},pointSize:{value:.2,min:.01,max:2,step:.01}},{collapsed:!0})}),u=P.exports.useRef(null);return b(({clock:p})=>{const d=p.getElapsedTime();let n,i,r;const l=u.current.geometry.attributes.position;for(let s=0;s<1e3;s++)i=s/(1e3-1),r=i*2*Math.PI,n=m*(1+t[s]*e(i,d)),l.setXYZ(s,n*Math.cos(r),n*Math.sin(r),0);l.needsUpdate=!0}),g("points",{ref:u,children:[o("bufferGeometry",{children:o("bufferAttribute",{attach:"attributes-position",array:new Float32Array(1e3*3),count:1e3,itemSize:3})}),o("pointsMaterial",{attach:"material",size:f})]})};export{y as B};
