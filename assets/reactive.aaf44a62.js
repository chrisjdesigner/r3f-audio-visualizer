import{r as T,M as I,C as L,u as v,j as g,B,a as F,b,c as w,d,H as _,e as G,f as N,F as H,G as V,V as j}from"./index.1dfdb1ed.js";const z=({coordinateMapper:A,nPerSide:e=10,cubeSideLength:l=.5,cubeSpacingScalar:i=.1,volume:p=!0,palette:E=w.THREE_COOL_TO_WARM})=>{const u=T.exports.useRef(null),m=T.exports.useMemo(()=>new I,[]),U=p?d.CARTESIAN_3D:d.CARTESIAN_CUBE_FACES,y=L.getPalette(E).buildLut();return T.exports.useEffect(()=>{let C,n,t,s,a;for(let o=0;o<e;o++)for(let r=0;r<e;r++)for(let c=0;c<e;c++)C=o*e**2+r*e+c,n=o/(e-1),t=r/(e-1),s=c/(e-1),n==0||n==1?a=Math.hypot(t-.5,s-.5)/_:t==0||t==1?a=Math.hypot(n-.5,s-.5)/_:s==0||s==1?a=Math.hypot(n-.5,t-.5)/_:a=0,u.current.setColorAt(C,y.getColor(a));u.current.instanceColor.needsUpdate=!0}),v(({clock:C})=>{const n=C.getElapsedTime(),t=e*(1+i)*l;let s,a,o,r,c,O,R,f;for(let h=0;h<e;h++)for(let x=0;x<e;x++)for(let M=0;M<e;M++)s=h*e**2+x*e+M,a=h/(e-1),o=x/(e-1),r=M/(e-1),c=t*(a-.5),O=t*(o-.5),R=t*(r-.5),m.setPosition(c,O,R),f=.1+.9*A.map(U,a,o,r,n),m.elements[0]=f,m.elements[5]=f,m.elements[10]=f,u.current.setMatrixAt(s,m);u.current.instanceMatrix.needsUpdate=!0}),g("instancedMesh",{ref:u,castShadow:!0,receiveShadow:!0,args:[new B,new F,e**3],children:[b("boxGeometry",{attach:"geometry",args:[l,l,l,1]}),b("meshBasicMaterial",{attach:"material",color:"white",toneMapped:!1})]})},Y=({coordinateMapper:A,palette:e=w.THREE_COOL_TO_WARM})=>{const{nPerSide:l,cubeUnitSideLength:i,cubeUnitSpacingScalar:p,volume:E}=G({"Visual - Cube":N({nPerSide:{value:10,min:3,max:50,step:1},cubeUnitSideLength:{value:.5,min:.1,max:2,step:.05},cubeUnitSpacingScalar:{value:.1,min:0,max:2,step:.1},volume:!0},{collapsed:!0})});return g(H,{children:[b(z,{coordinateMapper:A,nPerSide:l,cubeSideLength:i,cubeSpacingScalar:p,volume:E,palette:e}),b(V,{position:new j(0,0,-.75*l*(1+p)*i)})]})};export{Y as default};
