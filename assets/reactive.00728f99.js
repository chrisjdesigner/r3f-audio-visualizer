import{r as T,u as b,d as x,j as n,b as t,T as d,F as h,e as y,f as A,G as N,V as S}from"./index.1dfdb1ed.js";import{E as C,B as D,N as V}from"./index.3053eaa3.js";const p=()=>{let e=0,s=0;for(;e===0;)e=Math.random();for(;s===0;)s=Math.random();const a=Math.sqrt(-2*Math.log(e))*Math.cos(d*s)/10+.5;return a>1||a<0?p():a},v=({coordinateMapper:e,radius:s=2,pointSize:a=.2,nPoints:r=1e3,mirrorEffects:g=!1})=>{const R=[...Array(r)].map(p),f=T.exports.useRef(null);return b(({clock:E})=>{const M=E.getElapsedTime();let u,o,l,m;const c=f.current.geometry.attributes.position;for(let i=0;i<r;i++)o=i/(r-1),m=g?2*Math.abs(o-.5):o,l=o*d,u=s*(1+R[i]*e.map(x.CARTESIAN_1D,m,0,0,M)),c.setXYZ(i,u*Math.cos(l),u*Math.sin(l),0);c.needsUpdate=!0}),n("points",{ref:f,children:[t("bufferGeometry",{children:t("bufferAttribute",{attach:"attributes-position",array:new Float32Array(r*3),count:r,itemSize:3})}),t("pointsMaterial",{attach:"material",size:a})]})},w=({coordinateMapper:e})=>{const{radius:s,pointSize:a,mirrorEffects:r}=y({"Visual - Ring":A({radius:{value:2,min:.25,max:3,step:.25},pointSize:{value:.2,min:.01,max:2,step:.01},mirrorEffects:!1},{collapsed:!0})});return n(h,{children:[t(v,{coordinateMapper:e,radius:s,pointSize:a,mirrorEffects:r}),t(N,{position:new S(0,0,-1.5*e.amplitude)})]})},F=({...e})=>n(h,{children:[t(w,{...e}),n(C,{children:[t(D,{luminanceThreshold:.5,luminanceSmoothing:1,height:300}),t(V,{opacity:.05})]})]});export{F as default};
